name: Benchmark Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # 每周一运行基准测试
    - cron: '0 2 * * 1'

jobs:
  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run benchmark tests
      run: |
        pytest tests/test_benchmarks.py --benchmark-only --benchmark-save=benchmark-results --benchmark-save-data

    - name: Upload benchmark results
      uses: actions/upload-artifact@v3
      with:
        name: benchmark-results-${{ matrix.python-version }}
        path: .benchmarks/

    - name: Compare with baseline (if exists)
      run: |
        if [ -f ".benchmarks/baseline.json" ]; then
          pytest tests/test_benchmarks.py --benchmark-only --benchmark-compare=.benchmarks/baseline.json --benchmark-compare-fail=mean:10%
        fi

    - name: Save baseline (on main branch)
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p .benchmarks
        cp .benchmarks/*/machine_info.json .benchmarks/baseline.json || true 